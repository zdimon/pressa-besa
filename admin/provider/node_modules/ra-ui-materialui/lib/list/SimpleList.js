"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var prop_types_1 = __importDefault(require("prop-types"));
var Avatar_1 = __importDefault(require("@material-ui/core/Avatar"));
var List_1 = __importDefault(require("@material-ui/core/List"));
var ListItem_1 = __importDefault(require("@material-ui/core/ListItem"));
var ListItemAvatar_1 = __importDefault(require("@material-ui/core/ListItemAvatar"));
var ListItemIcon_1 = __importDefault(require("@material-ui/core/ListItemIcon"));
var ListItemSecondaryAction_1 = __importDefault(require("@material-ui/core/ListItemSecondaryAction"));
var ListItemText_1 = __importDefault(require("@material-ui/core/ListItemText"));
var styles_1 = require("@material-ui/core/styles");
var react_router_dom_1 = require("react-router-dom");
var ra_core_1 = require("ra-core");
var SimpleListLoading_1 = __importDefault(require("./SimpleListLoading"));
var useStyles = styles_1.makeStyles({
    tertiary: { float: 'right', opacity: 0.541176 },
}, { name: 'RaSimpleList' });
var useLinkOrNotStyles = styles_1.makeStyles({
    link: {
        textDecoration: 'none',
        color: 'inherit',
    },
}, { name: 'RaLinkOrNot' });
var LinkOrNot = function (_a) {
    var classesOverride = _a.classes, linkType = _a.linkType, basePath = _a.basePath, id = _a.id, children = _a.children, record = _a.record;
    var classes = useLinkOrNotStyles({ classes: classesOverride });
    var link = typeof linkType === 'function' ? linkType(record, id) : linkType;
    return link === 'edit' || link === true ? (React.createElement(react_router_dom_1.Link, { to: ra_core_1.linkToRecord(basePath, id), className: classes.link }, children)) : link === 'show' ? (React.createElement(react_router_dom_1.Link, { to: ra_core_1.linkToRecord(basePath, id) + "/show", className: classes.link }, children)) : (React.createElement("span", null, children));
};
var SimpleList = function (props) {
    var basePath = props.basePath, className = props.className, classesOverride = props.classes, data = props.data, hasBulkActions = props.hasBulkActions, ids = props.ids, loaded = props.loaded, loading = props.loading, leftAvatar = props.leftAvatar, leftIcon = props.leftIcon, linkType = props.linkType, onToggleItem = props.onToggleItem, primaryText = props.primaryText, rightAvatar = props.rightAvatar, rightIcon = props.rightIcon, secondaryText = props.secondaryText, selectedIds = props.selectedIds, tertiaryText = props.tertiaryText, total = props.total, rest = __rest(props, ["basePath", "className", "classes", "data", "hasBulkActions", "ids", "loaded", "loading", "leftAvatar", "leftIcon", "linkType", "onToggleItem", "primaryText", "rightAvatar", "rightIcon", "secondaryText", "selectedIds", "tertiaryText", "total"]);
    var classes = useStyles(props);
    if (loaded === false) {
        return (React.createElement(SimpleListLoading_1.default, { classes: classes, className: className, hasLeftAvatarOrIcon: !!leftIcon || !!leftAvatar, hasRightAvatarOrIcon: !!rightIcon || !!rightAvatar, hasSecondaryText: !!secondaryText, hasTertiaryText: !!tertiaryText }));
    }
    return (total > 0 && (React.createElement(List_1.default, __assign({ className: className }, ra_core_1.sanitizeListRestProps(rest)), ids.map(function (id) { return (React.createElement(LinkOrNot, { linkType: linkType, basePath: basePath, id: id, key: id, record: data[id] },
        React.createElement(ListItem_1.default, { button: !!linkType },
            leftIcon && (React.createElement(ListItemIcon_1.default, null, leftIcon(data[id], id))),
            leftAvatar && (React.createElement(ListItemAvatar_1.default, null,
                React.createElement(Avatar_1.default, null, leftAvatar(data[id], id)))),
            React.createElement(ListItemText_1.default, { primary: React.createElement("div", null,
                    primaryText(data[id], id),
                    tertiaryText && (React.createElement("span", { className: classes.tertiary }, tertiaryText(data[id], id)))), secondary: secondaryText && secondaryText(data[id], id) }),
            (rightAvatar || rightIcon) && (React.createElement(ListItemSecondaryAction_1.default, null,
                rightAvatar && (React.createElement(Avatar_1.default, null, rightAvatar(data[id], id))),
                rightIcon && (React.createElement(ListItemIcon_1.default, null, rightIcon(data[id], id)))))))); }))));
};
SimpleList.propTypes = {
    basePath: prop_types_1.default.string,
    className: prop_types_1.default.string,
    classes: prop_types_1.default.object,
    data: prop_types_1.default.object,
    hasBulkActions: prop_types_1.default.bool.isRequired,
    ids: prop_types_1.default.array,
    leftAvatar: prop_types_1.default.func,
    leftIcon: prop_types_1.default.func,
    linkType: prop_types_1.default.oneOfType([
        prop_types_1.default.string,
        prop_types_1.default.bool,
        prop_types_1.default.func,
    ]).isRequired,
    onToggleItem: prop_types_1.default.func,
    primaryText: prop_types_1.default.func,
    rightAvatar: prop_types_1.default.func,
    rightIcon: prop_types_1.default.func,
    secondaryText: prop_types_1.default.func,
    selectedIds: prop_types_1.default.arrayOf(prop_types_1.default.any).isRequired,
    tertiaryText: prop_types_1.default.func,
};
SimpleList.defaultProps = {
    linkType: 'edit',
    hasBulkActions: false,
    selectedIds: [],
};
exports.default = SimpleList;
