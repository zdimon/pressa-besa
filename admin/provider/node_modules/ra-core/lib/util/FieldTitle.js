"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var react_1 = require("react");
var useTranslate_1 = __importDefault(require("../i18n/useTranslate"));
var getFieldLabelTranslationArgs_1 = __importDefault(require("./getFieldLabelTranslationArgs"));
exports.FieldTitle = function (_a) {
    var resource = _a.resource, source = _a.source, label = _a.label, isRequired = _a.isRequired;
    var translate = useTranslate_1.default();
    if (label && typeof label !== 'string') {
        return label;
    }
    return (React.createElement("span", null,
        translate.apply(void 0, getFieldLabelTranslationArgs_1.default({
            label: label,
            resource: resource,
            source: source,
        })),
        isRequired && ' *'));
};
// wat? TypeScript looses the displayName if we don't set it explicitly
exports.FieldTitle.displayName = 'FieldTitle';
exports.default = react_1.memo(exports.FieldTitle);
